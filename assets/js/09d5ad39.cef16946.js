"use strict";(self.webpackChunkreact_auth_manager_website=self.webpackChunkreact_auth_manager_website||[]).push([[864],{3023:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(3696);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}},7018:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"examples","title":"Examples","description":"This page shows practical usage patterns for @neckbeard/react-auth-manager \u2014 from simple login/logout to protecting routes and customizing behavior.","source":"@site/docs/examples.md","sourceDirName":".","slug":"/examples","permalink":"/react-auth-manager-docs/docs/examples","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"slug":"/examples","title":"Examples"},"sidebar":"tutorialSidebar","previous":{"title":"API Reference","permalink":"/react-auth-manager-docs/docs/api-reference"}}');var r=t(2540),o=t(3023);const i={sidebar_position:4,slug:"/examples",title:"Examples"},a="Examples",c={},l=[{value:"\u2728 Basic Sign In &amp; Sign Out",id:"-basic-sign-in--sign-out",level:2},{value:"\ud83d\udd04 Silent Token Refresh on Window Focus",id:"-silent-token-refresh-on-window-focus",level:2},{value:"\ud83d\udd12 Protect a Route",id:"-protect-a-route",level:2},{value:"\ud83d\udd00 Auth Switch with Fallback UI",id:"-auth-switch-with-fallback-ui",level:2},{value:"\u2699\ufe0f Custom Axios Interceptors (Optional)",id:"\ufe0f-custom-axios-interceptors-optional",level:2},{value:"\u2705 Good Practices",id:"-good-practices",level:2}];function u(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"examples",children:"Examples"})}),"\n",(0,r.jsxs)(n.p,{children:["This page shows practical usage patterns for ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"@neckbeard/react-auth-manager"})})," \u2014 from simple login/logout to protecting routes and customizing behavior."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-basic-sign-in--sign-out",children:"\u2728 Basic Sign In & Sign Out"}),"\n",(0,r.jsxs)(n.p,{children:["Handle login and logout with ",(0,r.jsx)(n.code,{children:"useSignIn"})," and ",(0,r.jsx)(n.code,{children:"useSignOut"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { useSignIn, useSignOut } from '@neckbeard/react-auth-manager';\nimport api from './api';\n\nexport function LoginButton() {\n  const signIn = useSignIn();\n\n  async function handleLogin() {\n    const response = await api.post('/login', {\n      username: 'your-username',\n      password: 'your-password',\n    });\n\n    signIn(response.data.accessToken);\n    /*\n     SignIn() has nothing to do with the server,\n     it only sets the token from the response\n    */\n  }\n\n  return <button onClick={handleLogin}>Sign In</button>;\n}\n\nexport function LogoutButton() {\n  const signOut = useSignOut();\n\n  async function handleLogout() {\n    await api.post('/logout');\n    signOut(); \n    /* \n     SignOut() only clears the access token from memory,\n     it has nothing do with clearing the session on the server\n    */\n  }\n\n  return <button onClick={handleLogout}>Sign Out</button>;\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-silent-token-refresh-on-window-focus",children:"\ud83d\udd04 Silent Token Refresh on Window Focus"}),"\n",(0,r.jsx)(n.p,{children:"Trigger a silent refresh when the window/tab regains focus."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { useRefresh } from '@neckbeard/react-auth-manager';\nimport { useEffect } from 'react';\n\nexport function SilentRefreshOnFocus() {\n  const refresh = useRefresh();\n\n  useEffect(() => {\n    function handleFocus() {\n      refresh().catch(console.error);\n    }\n\n    window.addEventListener('focus', handleFocus);\n    return () => window.removeEventListener('focus', handleFocus);\n  }, [refresh]);\n\n  return null;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Place ",(0,r.jsx)(n.code,{children:"<SilentRefreshOnFocus />"})," anywhere inside ",(0,r.jsx)(n.code,{children:"<AuthProvider>"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-protect-a-route",children:"\ud83d\udd12 Protect a Route"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"NOTE: These components might be added natively in the future, so you don't have to implement them yourself then"})})}),"\n",(0,r.jsx)(n.p,{children:"Block access to a page if the user is not authenticated."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { useIsAuthenticated } from '@neckbeard/react-auth-manager';\nimport { Navigate } from 'react-router-dom';\n\nexport function ProtectedRoute({ children }) {\n  const isAuthenticated = useIsAuthenticated();\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return children;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Use in your router:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<Route\n  path="/dashboard"\n  element={\n    <ProtectedRoute>\n      <Dashboard />\n    </ProtectedRoute>\n  }\n/>\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-auth-switch-with-fallback-ui",children:"\ud83d\udd00 Auth Switch with Fallback UI"}),"\n",(0,r.jsx)(n.p,{children:"Show different UI when signed in or signed out."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { AuthSwitch } from '@neckbeard/react-auth-manager';\n\nexport function AuthMessage() {\n  return (\n    <AuthSwitch\n      signedIn={<p>Welcome back!</p>}\n      signedOut={<p>You are not logged in.</p>}\n    />\n  );\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-custom-axios-interceptors-optional",children:"\u2699\ufe0f Custom Axios Interceptors (Optional)"}),"\n",(0,r.jsxs)(n.p,{children:["You may want extra request or response logic in addition to what ",(0,r.jsx)(n.code,{children:"react-auth-manager"})," handles."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import axios from 'axios';\n\nconst api = axios.create({ baseURL: '/api' });\n\n// Add a custom request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log('Custom interceptor logic here');\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Then pass ",(0,r.jsx)(n.code,{children:"api"})," to ",(0,r.jsx)(n.code,{children:"<AuthProvider>"})," as usual."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-good-practices",children:"\u2705 Good Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Always handle ",(0,r.jsx)(n.strong,{children:"refresh token failures"})," \u2014 sign out the user or redirect them to login if a refresh fails."]}),"\n",(0,r.jsxs)(n.li,{children:["Protect routes on the frontend ",(0,r.jsx)(n.em,{children:"and"})," the backend \u2014 never trust the client alone."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);